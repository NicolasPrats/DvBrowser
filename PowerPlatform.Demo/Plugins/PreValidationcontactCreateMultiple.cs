// <copyright file="PreValidationcontactCreate.cs" company="">
// Copyright (c) 2023 All Rights Reserved
// </copyright>
// <author></author>
// <date>3/30/2023 2:35:37 PM</date>
// <summary>Implements the PreValidationcontactCreate Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>

using System;
using System.ServiceModel;
using Microsoft.Xrm.Sdk;

namespace PowerPlatform.Demo.Plugins
{

    /// <summary>
    /// PreValidationcontactCreate Plugin.
    /// </summary>    
    public class PreValidationcustomCreateMultiple : PluginBase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PreValidationcustomCreateMultiplePreValidationcustomCreateMultiple/> class.
        /// </summary>
        /// <param name="unsecure">Contains public (unsecured) configuration information.</param>
        /// <param name="secure">Contains non-public (secured) configuration information.</param>
        public PreValidationcustomCreateMultiple(string unsecure, string secure)
            : base(typeof(PreValidationcustomCreateMultiple))
        {

            // TODO: Implement your custom configuration handling.
        }


        /// <summary>
        /// Main entry point for he business logic that the plug-in is to execute.
        /// </summary>
        /// <param name="localContext">The <see cref="LocalPluginContext"/> which contains the
        /// <see cref="IPluginExecutionContext"/>,
        /// <see cref="IOrganizationService"/>
        /// and <see cref="ITracingService"/>
        /// </param>
        /// <remarks>
        /// </remarks>
        protected override void ExecuteCdsPlugin(ILocalPluginContext localContext)
        {
            if (localContext == null)
            {
                throw new InvalidPluginExecutionException(nameof(localContext));
            }
            // Obtain the tracing service
            ITracingService tracingService = localContext.TracingService;

            try
            {
                // Obtain the execution context from the service provider.  
                var context = localContext.PluginExecutionContext;

                // Obtain the organization service reference for web service calls.  
                IOrganizationService currentUserService = localContext.CurrentUserService;

                var targets = (EntityCollection ) context.InputParameters["Targets"];
                foreach (var target in targets.Entities)
                {
                    target["dvb_name"] = target.GetAttributeValue<string>("dvb_name").ToUpperInvariant();
                }

            }
            // Only throw an InvalidPluginExecutionException. Please Refer https://go.microsoft.com/fwlink/?linkid=2153829.
            catch (Exception ex)
            {
                tracingService?.Trace("An error occurred executing Plugin PowerPlatform.Demo.Plugins.PreValidationcustomCreateMultiple : {0}", ex.ToString());
                throw new InvalidPluginExecutionException("An error occurred executing Plugin PowerPlatform.Demo.Plugins.PreValidationcustomCreateMultiple .", ex);
            }
        }
    }
}
